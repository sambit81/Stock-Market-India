<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Stock Market India | Live Stock Data & News</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
        crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined" />
    <link rel="stylesheet" href="styles/main.css">
    <link rel="icon" href="favicon.ico" type="image/x-icon">

    <style>
        .clamp-text {
            display: -webkit-box;
            -webkit-line-clamp: 4;
            /* Limit to 4 lines */
            line-clamp: 4;
            -webkit-box-orient: vertical;
            overflow: hidden;
            text-overflow: ellipsis;
            height: calc(1.2em * 4);
            /* Adjust based on font size */
            line-height: 1.2em;
            /* Ensure consistent line spacing */
        }

        td {
            white-space: nowrap;
        }
    </style>
</head>

<body>
    <div class="container-fluid px-0">
        <div class="container-fluid">
            <div class="row">
                <div class="col col-sm-12 main-col-1 vh-100">
                    <div class="d-flex flex-column vh-25 justify-content-center align-items-center">
                        <div class="d-flex justify-content-between w-100" style="margin-bottom: 20px;">
                            <div style="align-self: flex-start;/* margin-bottom: 20px; */">
                                <h1 style="font-family: cursive;color: green;margin-bottom: 0;">Stock Market India</h1>
                            </div>

                            <div class="dropdown">
                                <button id="dark-mode-button"
                                    class="btn btn-success dropdown-toggle d-flex align-items-center py-2" type="button"
                                    data-bs-toggle="dropdown" aria-expanded="false" fdprocessedid="w0dhh">
                                </button>
                                <ul id="ul-list" class="dropdown-menu dropdown-menu-end shadow"
                                    aria-labelledby="bd-theme-text"
                                    style="position: absolute; inset: 0px 0px auto auto; margin: 0px; transform: translate3d(0px, 40px, 0px);"
                                    data-popper-placement="bottom-end">
                                    <li id="light">
                                        <button type="button" class="dropdown-item d-flex align-items-center"
                                            data-bs-theme-value="light" aria-pressed="true" fdprocessedid="wv4nus">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16"
                                                fill="currentColor" class="bi bi-brightness-high-fill me-2 opacity-50"
                                                viewBox="0 0 16 16">
                                                <path
                                                    d="M12 8a4 4 0 1 1-8 0 4 4 0 0 1 8 0M8 0a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 0m0 13a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 13m8-5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2a.5.5 0 0 1 .5.5M3 8a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2A.5.5 0 0 1 3 8m10.657-5.657a.5.5 0 0 1 0 .707l-1.414 1.415a.5.5 0 1 1-.707-.708l1.414-1.414a.5.5 0 0 1 .707 0m-9.193 9.193a.5.5 0 0 1 0 .707L3.05 13.657a.5.5 0 0 1-.707-.707l1.414-1.414a.5.5 0 0 1 .707 0m9.193 2.121a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .707M4.464 4.465a.5.5 0 0 1-.707 0L2.343 3.05a.5.5 0 1 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .708">
                                                </path>
                                            </svg>
                                            Light
                                            <svg id="light-check" xmlns="http://www.w3.org/2000/svg" width="16"
                                                height="16" fill="currentColor" class="bi bi-check2 ms-auto d-none"
                                                viewBox="0 0 16 16">
                                                <path
                                                    d="M13.854 3.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L6.5 10.293l6.646-6.647a.5.5 0 0 1 .708 0">
                                                </path>
                                            </svg>
                                        </button>
                                    </li>
                                    <li id="dark">
                                        <button type="button" class="dropdown-item d-flex align-items-center"
                                            data-bs-theme-value="light" aria-pressed="true" fdprocessedid="wv4nus">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16"
                                                fill="currentColor" class="bi bi-moon-stars-fill me-2 opacity-50"
                                                viewBox="0 0 16 16">
                                                <path
                                                    d="M6 .278a.77.77 0 0 1 .08.858 7.2 7.2 0 0 0-.878 3.46c0 4.021 3.278 7.277 7.318 7.277q.792-.001 1.533-.16a.79.79 0 0 1 .81.316.73.73 0 0 1-.031.893A8.35 8.35 0 0 1 8.344 16C3.734 16 0 12.286 0 7.71 0 4.266 2.114 1.312 5.124.06A.75.75 0 0 1 6 .278">
                                                </path>
                                                <path
                                                    d="M10.794 3.148a.217.217 0 0 1 .412 0l.387 1.162c.173.518.579.924 1.097 1.097l1.162.387a.217.217 0 0 1 0 .412l-1.162.387a1.73 1.73 0 0 0-1.097 1.097l-.387 1.162a.217.217 0 0 1-.412 0l-.387-1.162A1.73 1.73 0 0 0 9.31 6.593l-1.162-.387a.217.217 0 0 1 0-.412l1.162-.387a1.73 1.73 0 0 0 1.097-1.097zM13.863.099a.145.145 0 0 1 .274 0l.258.774c.115.346.386.617.732.732l.774.258a.145.145 0 0 1 0 .274l-.774.258a1.16 1.16 0 0 0-.732.732l-.258.774a.145.145 0 0 1-.274 0l-.258-.774a1.16 1.16 0 0 0-.732-.732l-.774-.258a.145.145 0 0 1 0-.274l.774-.258c.346-.115.617-.386.732-.732z">
                                                </path>
                                            </svg>
                                            Dark
                                            <svg id="dark-check" xmlns="http://www.w3.org/2000/svg" width="16"
                                                height="16" fill="currentColor" class="bi bi-check2 ms-auto d-none"
                                                viewBox="0 0 16 16">
                                                <path
                                                    d="M13.854 3.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L6.5 10.293l6.646-6.647a.5.5 0 0 1 .708 0">
                                                </path>
                                            </svg>
                                        </button>
                                    </li>
                                    <li id="auto">
                                        <button type="button" class="dropdown-item d-flex align-items-center"
                                            data-bs-theme-value="auto" aria-pressed="false" fdprocessedid="h372ba">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16"
                                                fill="currentColor" class="bi bi-circle-half me-2 opacity-50"
                                                viewBox="0 0 16 16">
                                                <path d="M8 15A7 7 0 1 0 8 1zm0 1A8 8 0 1 1 8 0a8 8 0 0 1 0 16"></path>
                                            </svg>
                                            Auto
                                            <svg id="auto-check" xmlns="http://www.w3.org/2000/svg" width="16"
                                                height="16" fill="currentColor" class="bi bi-check2 ms-auto d-none"
                                                viewBox="0 0 16 16">
                                                <path
                                                    d="M13.854 3.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L6.5 10.293l6.646-6.647a.5.5 0 0 1 .708 0">
                                                </path>
                                            </svg>
                                        </button>
                                    </li>
                                </ul>
                            </div>
                        </div>

                        <div class="input-group input-group-lg mb-3" style="width: auto;">
                            <input type="text" id="stock-name" class="form-control" placeholder="Search Stocks"
                                aria-label="Recipient's username" aria-describedby="search-button"
                                style="border-top-right-radius: 0px; border-bottom-right-radius: 0px;">
                            <button class="btn btn-outline-dark" type="button" id="search-button">Search</button>
                        </div>
                    </div>
                    <div class="d-flex vh-75 flex-column">
                        <div class="row justify-content-center gap-2">
                            <div class="col-auto" id="button-container">
                                <span class="btn rounded-pill btn-outline-dark active mt-1" aria-pressed="true"
                                    id="gainers_losers">Gainers/Losers</span>
                                <span class="btn rounded-pill btn-outline-dark mt-1" aria-pressed="true"
                                    id="nse_most_active">NSE Most Active</span>
                                <span class="btn rounded-pill btn-outline-dark mt-1" aria-pressed="true"
                                    id="bse_most_active">BSE Most Active</span>
                                <span class="btn rounded-pill btn-outline-dark mt-1" aria-pressed="true"
                                    id="price_shockers">Price Shockers</span>
                            </div>
                        </div>
                        <div class="row justify-content-center">
                            <div class="col-auto" id="paragraph-container">
                                <p id="toggle-button-details" class="ms-2 mt-1" style="font-size: 12px;">Your details go
                                    here</p>
                            </div>
                        </div>
                        <div id="loader" class="spinner-border hidden" role="status"
                            style="align-self: center; margin-bottom: 5px;">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                        <div class="d-flex justify-content-center" style="overflow-y: auto; margin-bottom: 40px;">
                            <div class="table-responsive">
                                <table class="table align-self-start table-hover table-dark">
                                    <thead>
                                    </thead>
                                    <tbody id="table-body"></tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div id="placeholder-data">
            <div class="container-fluid">
                <div class="row">
                    <div class="col">
                        <div class="container-fluid mt-3 px-0">
                            <div class="row">
                                <div class="col col-12 placeholder-glow">
                                    <p class="h1 placeholder">fffffffffffffffffffffffff</p>
                                </div>
                                <div class="col col-12 placeholder-glow">
                                    <p class="h5 lead placeholder">fffffffffffffffffffffffff</p>
                                </div>
                            </div>
                            <div class="row mt-5">
                                <div class="col col-12 placeholder-glow">
                                    <p class="d-inline fs-1 fw-normal placeholder">fffffffffffff</p>
                                </div>
                                <div class="col col-12">
                                    <!-- Just to align them in one line. Otherwise the arrow goes little bit to top.-->
                                    <div class="d-flex flex-row align-items-center placeholder-glow">
                                        <p class="d-inline fs-5 fw-normal mb-0 placeholder">
                                            fffffffffffffffffffffffffffff</p>
                                    </div>
                                    <!--Black: Green 81C995 Red F28B82 White: Green 188038 Red D93025-->
                                </div>
                                <div class="col col-12 placeholder-glow">
                                    <p class="d-inline fs-6 fw-normal placeholder">ffffffffffffffffffffffffffffffffffff
                                    </p>
                                </div>
                            </div>
                            <div class="mt-3 row">
                                <div class="col col-sm-12 col-md-6 placeholder-glow">
                                    <p class="h4 fw-normal placeholder">fffffffffffffffffffffffff</p>
                                </div>
                                <div class="col col-sm-12 col-md-6 placeholder-glow">
                                    <p class="h4 fw-normal placeholder">fffffffffffffffffffffffff</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="container-fluid mt-5 mb-5 placeholder-glow">
                <h2 class="text-center mb-4 placeholder">Recent News</h2>
                <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
                    <div class="col">
                        <div class="card">
                            <div class="d-flex flex-row placeholder">
                                <div class="card-body">
                                    <a class="card-text clamp-text " style="text-decoration: none; color: #1A0DAB;"
                                        href="" target="_blank">
                                    </a>
                                </div>
                            </div>
                            <div class="card-footer text-center placeholder">
                                <small class="text-muted">
                                </small>
                            </div>
                        </div>
                    </div>
                    <div class="col">
                        <div class="card">
                            <div class="d-flex flex-row placeholder">
                                <div class="card-body">
                                    <a class="card-text clamp-text " style="text-decoration: none; color: #1A0DAB;"
                                        href="" target="_blank">
                                    </a>
                                </div>
                            </div>
                            <div class="card-footer text-center placeholder">
                                <small class="text-muted">
                                </small>
                            </div>
                        </div>
                    </div>
                    <div class="col">
                        <div class="card">
                            <div class="d-flex flex-row placeholder">
                                <div class="card-body">
                                    <a class="card-text clamp-text " style="text-decoration: none; color: #1A0DAB;"
                                        href="" target="_blank">
                                    </a>
                                </div>
                            </div>
                            <div class="card-footer text-center placeholder">
                                <small class="text-muted">
                                </small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div id="real-data">
            <div class="container-fluid" id="company-section">
                <div class="row">
                    <div class="col">
                        <div class="container-fluid mt-3 px-0">
                            <div class="row">
                                <div class="col col-12">
                                    <p class="h1" id="companyName"></p>
                                </div>
                                <div class="col col-12">
                                    <p class="h5 lead" id="industry"></p>
                                </div>
                            </div>
                            <div class="row mt-5">
                                <div class="col col-12">
                                    <p class="d-inline fs-1 fw-normal" id="price"></p>
                                    <p class="d-inline fs-6 fw-light">INR</p>
                                </div>
                                <div class="col col-12">
                                    <div class="d-flex flex-row align-items-center" id="price-high">
                                        <p class="d-inline fs-5 fw-normal mb-0" style="color: #188038;"
                                            id="price-high-actual-price"></p>
                                        <span class="material-symbols-outlined"
                                            style="color: #00ff4c;">arrow_upward</span>
                                        <p class="d-inline fs-5 fw-normal mb-0" style="color: #188038;">today</p>
                                    </div>
                                    <div class="d-flex flex-row align-items-center" id="price-low">
                                        <p class="d-inline fs-5 fw-normal mb-0" style="color: #D93025;"
                                            id="price-low-actual-price"></p>
                                        <span class="material-symbols-outlined"
                                            style="color: #ff1100;">arrow_downward</span>
                                        <p class="d-inline fs-5 fw-normal mb-0" style="color: #D93025;">today</p>
                                    </div>
                                </div>
                                <div class="col col-12">
                                    <p class=" d-inline fs-6 fw-normal" id="stock-date-time"></p>
                                </div>
                            </div>
                            <div class="mt-3 row">
                                <div class="col col-sm-12 col-md-6">
                                    <p class="h4 fw-normal">52 Week Range</p>
                                    <div class="d-flex flex-row justify-content-between">
                                        <p class="mb-0" id="year-low"></p>
                                        <p class="mb-0" id="year-high"></p>
                                    </div>
                                    <div class="d-flex flex-row justify-content-between">
                                        <p>L</p>
                                        <input type="range" class="mx-1" min="" max="" value="" id="customRange-year"
                                            disabled>
                                        <p>H</p>
                                    </div>
                                </div>
                                <div class="col col-sm-12 col-md-6">
                                    <p class="h4 fw-normal">Day Range</p>
                                    <div class="d-flex flex-row justify-content-between">
                                        <p class="mb-0" id="day-low"></p>
                                        <p class="mb-0" id="day-high"></p>
                                    </div>
                                    <div class="d-flex flex-row justify-content-between">
                                        <p>L</p>
                                        <input type="range" class="mx-1" min="" max="" value="" id="customRange-day"
                                            disabled>
                                        <p>H</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="container-fluid mt-5 mb-5" id="news-section">
                <h2 class="text-center mb-4">Recent News</h2>
                <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4" id="news-cards-container">
                </div>
            </div>
        </div>
    </div>

    <script>
        localStorage.removeItem('GainersLosers');
        localStorage.removeItem('NSEMostActive');
        localStorage.removeItem('BSEMostActive');
        localStorage.removeItem('PriceShockers');
        localStorage.removeItem('GainersLosersProgress');
        localStorage.removeItem('NSEMostActiveProgress');
        localStorage.removeItem('BSEMostActiveProgress');
        localStorage.removeItem('PriceShockersProgress');
        const trending = JSON.parse(<%- JSON.stringify(trending) %>);
        const nseMostActive = JSON.parse(<%- JSON.stringify(nseMostActive) %>);
        const bseMostActive = JSON.parse(<%- JSON.stringify(bseMostActive) %>);
        const priceShockers = JSON.parse(<%- JSON.stringify(priceShockers) %>);


        localStorage.setItem('GainersLosers', JSON.stringify(trending));
        localStorage.setItem('NSEMostActive', JSON.stringify(nseMostActive));
        localStorage.setItem('BSEMostActive', JSON.stringify(bseMostActive));
        localStorage.setItem('PriceShockers', JSON.stringify(priceShockers));

        const search = document.querySelector("#search-button");

        const realDataSection = document.querySelector("#real-data");
        realDataSection.classList.add("hidden");

        const placeholderSection = document.querySelector("#placeholder-data");
        placeholderSection.classList.add("hidden");

        // Run the function on page load
        window.addEventListener('load', adjustParagraphWidth);

        // Adjust width on window resize
        window.addEventListener('resize', adjustParagraphWidth);

        search.addEventListener("click", () => {
            const searchData = document.querySelector("#stock-name").value;

            realDataSection.classList.add("hidden");
            placeholderSection.classList.remove("hidden");

            window.scrollTo({
                top: window.innerHeight,
                behavior: "smooth",
            });

            if (searchData.length !== 0) {
                const data = { stockName: searchData };
                fetch('/fetch-stock-data', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                })
                    .then(response => response.json())
                    .then(data => {
                        placeholderSection.classList.add("hidden");
                        realDataSection.classList.remove("hidden");

                        basicDetails(data);
                        highLow(data);
                        time(data);
                        range(data);
                        populateNews(data);
                    })
                    .catch(error => console.error("Error: " + error));
            }
        });

        function adjustParagraphWidth() {
            // Get the width of the button container
            const buttonContainer = document.getElementById("button-container");
            const paragraphContainer = document.getElementById("paragraph-container");

            // Set the width of the paragraph container to match the button container
            paragraphContainer.style.width = `${buttonContainer.offsetWidth}px`;
        }

        function basicDetails(data) {
            document.getElementById("companyName").textContent = data.companyName;
            document.getElementById("industry").textContent = data.industry;
            document.getElementById("price").textContent = data.stockDetailsReusableData.price;
        }

        function highLow(data) {
            const previousClose = data.stockDetailsReusableData.close;
            const currentPrice = data.stockDetailsReusableData.price;
            let diff = currentPrice - previousClose;
            let sign = null;

            if (diff < 0) {
                sign = '-';
            }

            diff = Math.abs(diff);
            diff = Math.round((diff + Number.EPSILON) * 100) / 100;

            if (sign === '-') {
                document.getElementById("price-high").classList.add("hidden");
                document.getElementById("price-low").classList.remove("hidden");
                document.getElementById("price-low-actual-price").textContent = `-${diff}(${data.percentChange}%)`;
            } else {
                document.getElementById("price-low").classList.add("hidden");
                document.getElementById("price-high").classList.remove("hidden");
                document.getElementById("price-high-actual-price").textContent = `+${diff}(${data.percentChange}%)`;
            }
        }

        function time(data) {
            var monthNum = {
                "Jan": "01", "Feb": "02", "March": "03", "Mar"
                    : "03", "April": "04", "Apr": "04", "May": "05", "June": "06"
                , "Jun": "06", "July": "07", "Jul": "07", "Aug": "08", "Sept"
                    : "09", "Sep": "09", "Oct": "10", "Nov": "11", "Dec": "12"
            };
            var day = {
                "1": "01", "01": "01", "2": "02", "02": "02", "3"
                    : "03", "03": "03", "4": "04", "04": "04", "5": "05", "05"
                    : "05", "6": "06", "06": "06", "7": "07", "07": "07", "8"
                    : "08", "08": "08", "9": "09", "09": "09", "10": "10", "11"
                    : "11", "12": "12", "13": "13", "14": "14", "15": "15"
                , "16": "16", "17": "17", "18": "18", "19": "19", "20"
                    : "20", "21": "21", "22": "22", "23": "23", "24": "24"
                , "25": "25", "26": "26", "27": "27", "28": "28", "29"
                    : "29", "30": "30", "31": "31"
            };
            var date = data.stockDetailsReusableData.date;
            var time = data.stockDetailsReusableData.time;
            const dateArray = date.split(" ");
            const year_month_day = `${dateArray[2]}-${monthNum[dateArray[1]]}-${day[dateArray[0]]}`;
            date = date.substring(0, date.length - 5);
            time = new Date(year_month_day + 'T' + time + 'Z').toLocaleTimeString('en-US', { timeZone: 'UTC', hour12: true, hour: 'numeric', minute: 'numeric' });
            document.getElementById("stock-date-time").textContent = `${date}, ${time} IST •`;
        }

        function range(data) {
            document.getElementById("year-low").textContent = data.stockDetailsReusableData.ylow;
            document.getElementById("year-high").textContent = data.stockDetailsReusableData.yhigh;
            document.getElementById("customRange-year").min = data.stockDetailsReusableData.ylow;
            document.getElementById("customRange-year").max = data.stockDetailsReusableData.yhigh;
            document.getElementById("customRange-year").value = data.stockDetailsReusableData.price;

            document.getElementById("day-low").textContent = data.stockDetailsReusableData.low;
            document.getElementById("day-high").textContent = data.stockDetailsReusableData.high;
            document.getElementById("customRange-day").min = data.stockDetailsReusableData.low;
            document.getElementById("customRange-day").max = data.stockDetailsReusableData.high;
            document.getElementById("customRange-day").value = data.stockDetailsReusableData.price;
        }

        function populateNews(data) {
            const newsContainer = document.getElementById("news-cards-container");
            newsContainer.innerHTML = "";

            const news = data.recentNews;

            news.forEach((news) => {
                const card = document.createElement("div");
                card.className = "col";
                const time = parseDate(news.date);

                card.innerHTML = `<div class="col">
                    <div class="card">
                        <div class="d-flex flex-row">
                            <img src="${news.thumbnailimage}" class="img-fluid rounded-start" alt="News Image"
                                style="border-bottom-left-radius: 0px !important;">
                            <div class="card-body">
                                <a class="card-text clamp-text" style="text-decoration: none; color: #1A0DAB;" href="${news.url}"
                                    target="_blank">
                                    ${news.headline}
                                </a>
                            </div>
                        </div>
                        <div class="card-footer text-center">
                            <small class="text-muted">${time}
                            </small>
                        </div>
                    </div>
                </div>`;

                newsContainer.appendChild(card);
            });
        }

        function parseDate(date) {
            var monthNum = {
                "Jan": "01", "Feb": "02", "March": "03", "Mar"
                    : "03", "April": "04", "Apr": "04", "May": "05", "June": "06"
                , "Jun": "06", "July": "07", "Jul": "07", "Aug": "08", "Sept"
                    : "09", "Sep": "09", "Oct": "10", "Nov": "11", "Dec": "12"
            };
            var day = {
                "1": "01", "01": "01", "2": "02", "02": "02", "3"
                    : "03", "03": "03", "4": "04", "04": "04", "5": "05", "05"
                    : "05", "6": "06", "06": "06", "7": "07", "07": "07", "8"
                    : "08", "08": "08", "9": "09", "09": "09", "10": "10", "11"
                    : "11", "12": "12", "13": "13", "14": "14", "15": "15"
                , "16": "16", "17": "17", "18": "18", "19": "19", "20"
                    : "20", "21": "21", "22": "22", "23": "23", "24": "24"
                , "25": "25", "26": "26", "27": "27", "28": "28", "29"
                    : "29", "30": "30", "31": "31"
            };
            const dateArr = date.split(" ");
            const newsDateString = dateArr[3] + "-" + monthNum[dateArr[2]] + "-" + day[dateArr[1]] + "T" + dateArr[4] + ":00+05:30";
            const newsDate = new Date(newsDateString);
            const currentDate = Date.now();
            const timeDiffInMillis = currentDate - newsDate.getTime();
            const timeDiffInSeconds = timeDiffInMillis / 1000;
            var timeText = "";
            if (timeDiffInSeconds < 60) {
                timeText = "Just now";
            } else {
                const timeDiffInMins = timeDiffInSeconds / 60;
                if (timeDiffInMins < 60) {
                    timeText = Math.floor(timeDiffInMins) === 1 ? `${Math.floor(timeDiffInMins)} min ago` : `${Math.floor(timeDiffInMins)} mins ago`;
                } else {
                    const timeDiffInHours = timeDiffInMins / 60;
                    if (timeDiffInHours < 24) {
                        timeText = Math.floor(timeDiffInHours) === 1 ? `${Math.floor(timeDiffInHours)} hour ago` : `${Math.floor(timeDiffInHours)} hours ago`;
                    } else {
                        const timeDiffInDays = timeDiffInHours / 24;
                        if (timeDiffInDays < 7) {
                            timeText = Math.floor(timeDiffInDays) === 1 ? `${Math.floor(timeDiffInDays)} day ago` : `${Math.floor(timeDiffInDays)} days ago`;
                        } else {
                            const timeDiffInWeeks = timeDiffInDays / 7;
                            if (timeDiffInWeeks < 5) {
                                timeText = Math.floor(timeDiffInWeeks) === 1 ? `${Math.floor(timeDiffInWeeks)} week ago` : `${Math.floor(timeDiffInWeeks)} weeks ago`;
                            } else {
                                const timeDiffInMonths = timeDiffInWeeks / 4;
                                if (timeDiffInMonths < 12) {
                                    timeText = Math.floor(timeDiffInMonths) === 1 ? `${Math.floor(timeDiffInMonths)} month ago` : `${Math.floor(timeDiffInMonths)} months ago`;
                                } else {
                                    const timeDiffInYears = timeDiffInMonths / 12;
                                    timeText = Math.floor(timeDiffInYears) === 1 ? `${Math.floor(timeDiffInYears)} year ago` : `${Math.floor(timeDiffInYears)} years ago`;
                                }
                            }
                        }
                    }
                }
            }
            return timeText;
        }

        const gainers_losers = document.getElementById("gainers_losers");
        const nse_most_active = document.getElementById("nse_most_active");
        const bse_most_active = document.getElementById("bse_most_active");
        const price_shockers = document.getElementById("price_shockers");

        const spans = document.querySelectorAll('.btn');

        const toggle_para = document.getElementById("toggle-button-details");
        initialTextToggle();

        function initialTextToggle() {
            toggle_para.innerText = 'Snapshot of the top gaining and losing stocks at the current moment';
        }

        gainers_losers.addEventListener("click", () => {
            if (gainers_losers.classList.contains('active')) {
                return;
            }
            spans.forEach(s => {
                s.classList.remove('active');
                s.setAttribute('aria-pressed', 'false');
            });
            gainers_losers.classList.add('active');
            gainers_losers.setAttribute('aria-pressed', 'true');
            toggle_para.innerText = 'Snapshot of the top gaining and losing stocks at the current moment';
            loadGainersLosers();
            fetchGainersLosers();
        });
        loadGainersLosers();

        async function fetchGainersLosers() {
            if (localStorage.getItem('GainersLosersProgress') !== null || localStorage.getItem('NSEMostActiveProgress') !== null
                || localStorage.getItem('BSEMostActiveProgress') !== null || localStorage.getItem('PriceShockersProgress') !== null) {
                return;
            }
            localStorage.setItem('GainersLosersProgress', 'true');
            await fetch('/fetch-gainers-losers', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(response => response.json())
                .then(data => {
                    localStorage.setItem('GainersLosers', JSON.stringify(data));
                    const id = setTimeout(() => {
                        localStorage.removeItem('GainersLosersProgress');
                    }, 120000);
                });
        }

        function loadGainersLosers() {
            const data = JSON.parse(localStorage.getItem('GainersLosers'));
            const tableBody = document.getElementById("table-body");

            while (tableBody.hasChildNodes()) {
                tableBody.removeChild(tableBody.firstChild);
            }

            const gainers = data.trending_stocks.top_gainers;
            const losers = data.trending_stocks.top_losers;

            gainers.forEach((gain) => {
                const table_row = document.createElement("tr");

                const company_name = document.createElement("td");
                company_name.innerText = gain.company_name;

                const gain_price = document.createElement("td");
                gain_price.innerText = '₹' + gain.price;
                gain_price.classList.add('text-end');

                const net_change = document.createElement("td");
                net_change.classList.add('text-end');
                net_change.style.color = '#137333';
                net_change.innerText = '+₹' + gain.net_change;
                net_change.id = "net-change-high";

                const percent_change = document.createElement("td");
                percent_change.classList.add("text-end");
                percent_change.innerHTML = `<div>
                                                <span class="badge d-inline-flex align-items-center" style="background-color: #E6F4EA;">
                                                    <span class="material-symbols-outlined fs-5" style="color: #137333;">
                                                        arrow_upward
                                                    </span>
                                                    <p class="fs-6 mb-0 pb-0" style="color: #137333;">${gain.percent_change}%</p>
                                                    <!-- green E6f4EA red FCE8E6 text green: 137333 red: a50e0e-->
                                                </span>
                                            </div>`;

                table_row.appendChild(company_name);
                table_row.appendChild(gain_price);
                table_row.appendChild(net_change);
                table_row.appendChild(percent_change);

                tableBody.appendChild(table_row);
            });

            losers.forEach((loss) => {
                const table_row = document.createElement("tr");

                const company_name = document.createElement("td");
                company_name.innerText = loss.company_name;

                const gain_price = document.createElement("td");
                gain_price.innerText = '₹' + loss.price;
                gain_price.classList.add('text-end');

                const net_change = document.createElement("td");
                net_change.classList.add('text-end');
                net_change.style.color = '#A50E0E';
                let loss_net_change = loss.net_change;
                loss_net_change = loss_net_change.slice(0, 1) + "₹" + loss_net_change.slice(1);
                net_change.innerText = loss_net_change;
                net_change.id = "net-change-low";

                const percent_change = document.createElement("td");
                percent_change.classList.add("text-end");
                let percent_change_value = loss.percent_change;
                percent_change_value = percent_change_value.slice(1);
                percent_change.innerHTML = `<div>
                                                <span class="badge d-inline-flex align-items-center" style="background-color: #FCE8E6;">
                                                    <span class="material-symbols-outlined fs-5" style="color: #A50E0E;">
                                                        arrow_downward
                                                    </span>
                                                    <p class="fs-6 mb-0 pb-0" style="color: #A50E0E;">${percent_change_value}%</p>
                                                    <!-- green E6f4EA red FCE8E6 text green: 137333 red: a50e0e-->
                                                </span>
                                            </div>`;

                table_row.appendChild(company_name);
                table_row.appendChild(gain_price);
                table_row.appendChild(net_change);
                table_row.appendChild(percent_change);

                tableBody.appendChild(table_row);
            });
            darkMode(); // If Dark mode is enabled, it will darken the color of net change column
        }

        nse_most_active.addEventListener("click", () => {
            if (nse_most_active.classList.contains('active')) {
                return;
            }
            spans.forEach(s => {
                console.log("Executed");
                s.classList.remove('active');
                s.setAttribute('aria-pressed', 'false');
            });
            nse_most_active.classList.add('active');
            nse_most_active.setAttribute('aria-pressed', 'true');
            toggle_para.innerText = 'Most active stocks in the National Stock Exchange (NSE) based on trading volume.';
            loadNSEMostActive();
            fetchNSEMostActive();
        });

        function loadNSEMostActive() {
            const data = JSON.parse(localStorage.getItem('NSEMostActive'));
            const tableBody = document.getElementById("table-body");

            while (tableBody.hasChildNodes()) {
                tableBody.removeChild(tableBody.firstChild);
            }

            populateNSEBSEData(data, tableBody);
        }

        function fetchNSEMostActive() {
            if (localStorage.getItem('GainersLosersProgress') !== null || localStorage.getItem('NSEMostActiveProgress') !== null
                || localStorage.getItem('BSEMostActiveProgress') !== null || localStorage.getItem('PriceShockersProgress') !== null) {
                return;
            }

            localStorage.setItem('NSEMostActiveProgress', 'true');
            fetch('/fetch-nse-most-active', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(response => response.json())
                .then(data => {
                    localStorage.setItem('NSEMostActive', JSON.stringify(data));
                    const id = setTimeout(() => {
                        localStorage.removeItem('NSEMostActiveProgress');
                    }, 120000);
                })
                .catch(error => console.error("Error: " + error));
        }

        bse_most_active.addEventListener("click", () => {
            if (bse_most_active.classList.contains('active')) {
                return;
            }
            spans.forEach(s => {
                s.classList.remove('active');
                s.setAttribute('aria-pressed', 'false');
            });
            bse_most_active.classList.add('active');
            bse_most_active.setAttribute('aria-pressed', 'true');
            toggle_para.innerText = 'Most active stocks in the Bombay Stock Exchange (BSE) based on trading volume.';

            loadBSEMostActive();
            fetchBSEMostActive();
        });

        function loadBSEMostActive() {
            const data = JSON.parse(localStorage.getItem('BSEMostActive'));
            const tableBody = document.getElementById("table-body");

            while (tableBody.hasChildNodes()) {
                tableBody.removeChild(tableBody.firstChild);
            }

            populateNSEBSEData(data, tableBody);
        }

        function fetchBSEMostActive() {
            if (localStorage.getItem('GainersLosersProgress') !== null || localStorage.getItem('NSEMostActiveProgress') !== null
                || localStorage.getItem('BSEMostActiveProgress') !== null || localStorage.getItem('PriceShockersProgress') !== null) {
                return;
            }

            localStorage.setItem('BSEMostActiveProgress', 'true');
            fetch('/fetch-bse-most-active', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(response => response.json())
                .then(data => {
                    localStorage.setItem('BSEMostActive', JSON.stringify(data));
                    const id = setTimeout(() => {
                        localStorage.removeItem('BSEMostActiveProgress');
                    }, 120000);
                })
                .catch(error => console.error("Error: " + error));
        }

        function populateNSEBSEData(data, tableBody) {
            data.forEach((stock) => {
                const table_row = document.createElement("tr");

                const company_name = document.createElement("td");
                company_name.innerText = stock.company;

                const price = document.createElement("td");
                price.innerText = '₹' + stock.price;
                price.classList.add('text-end');

                const net_change = document.createElement("td");
                net_change.classList.add('text-end');
                let stock_net_change = stock.net_change.toString();
                if (stock_net_change.slice(0, 1) === '-') {
                    net_change.style.color = '#A50E0E';
                    let loss_net_change = stock_net_change;
                    loss_net_change = loss_net_change.slice(0, 1) + "₹" + loss_net_change.slice(1);
                    net_change.innerText = loss_net_change;
                    net_change.id = "net-change-low";
                } else {
                    net_change.style.color = '#137333';
                    net_change.innerText = '+₹' + stock.net_change;
                    net_change.id = "net-change-high";
                }

                const percent_change = document.createElement("td");
                percent_change.classList.add("text-end");
                let stock_percent_change = stock.percent_change.toString();
                if (stock_percent_change.slice(0, 1) === '-') {
                    stock_percent_change = stock_percent_change.slice(1);
                    percent_change.innerHTML = `<div>
                                                <span class="badge d-inline-flex align-items-center" style="background-color: #FCE8E6;">
                                                    <span class="material-symbols-outlined fs-5" style="color: #A50E0E;">
                                                        arrow_downward
                                                    </span>
                                                    <p class="fs-6 mb-0 pb-0" style="color: #A50E0E;">${stock_percent_change}%</p>
                                                    <!-- green E6f4EA red FCE8E6 text green: 137333 red: a50e0e-->
                                                </span>
                                            </div>`;
                } else {
                    percent_change.innerHTML = `<div>
                                                <span class="badge d-inline-flex align-items-center" style="background-color: #E6F4EA;">
                                                    <span class="material-symbols-outlined fs-5" style="color: #137333;">
                                                        arrow_upward
                                                    </span>
                                                    <p class="fs-6 mb-0 pb-0" style="color: #137333;">${stock_percent_change}%</p>
                                                    <!-- green E6f4EA red FCE8E6 text green: 137333 red: a50e0e-->
                                                </span>
                                            </div>`;
                }

                table_row.appendChild(company_name);
                table_row.appendChild(price);
                table_row.appendChild(net_change);
                table_row.appendChild(percent_change);

                tableBody.appendChild(table_row);
            });
            darkMode(); // If Dark mode is enabled, it will darken the color of net change column
        }

        price_shockers.addEventListener("click", () => {
            if (price_shockers.classList.contains('active')) {
                return;
            }
            spans.forEach(s => {
                s.classList.remove('active');
                s.setAttribute('aria-pressed', 'false');
            });
            price_shockers.classList.add('active');
            price_shockers.setAttribute('aria-pressed', 'true');
            toggle_para.innerText = 'Stocks that have experienced significant price changes in a short period of time.';

            loadPriceShockers();
            fetchPriceShockers();
        });

        function loadPriceShockers() {
            const data = JSON.parse(localStorage.getItem('PriceShockers'));
            const tableBody = document.getElementById("table-body");

            while (tableBody.hasChildNodes()) {
                tableBody.removeChild(tableBody.firstChild);
            }

            populatePriceShockersData(data.BSE_PriceShocker, tableBody, 'BSE');
            populatePriceShockersData(data.NSE_PriceShocker, tableBody, 'NSE');
        }

        function fetchPriceShockers() {
            if (localStorage.getItem('GainersLosersProgress') !== null || localStorage.getItem('NSEMostActiveProgress') !== null
                || localStorage.getItem('BSEMostActiveProgress') !== null || localStorage.getItem('PriceShockersProgress') !== null) {
                return;
            }

            localStorage.setItem('PriceShockersProgress', 'true');
            fetch('/fetch-price-shockers', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(response => response.json())
                .then(data => {
                    localStorage.setItem('PriceShockers', JSON.stringify(data));
                    const id = setTimeout(() => {
                        localStorage.removeItem('PriceShockersProgress');
                    }, 120000);
                })
                .catch(error => console.error("Error: " + error));
        }

        function populatePriceShockersData(data, tableBody, exchange) {
            data.forEach((price_shockers) => {
                const table_row = document.createElement("tr");

                const company_name = document.createElement("td");
                if (exchange === 'BSE') {
                    company_name.innerHTML = `<div style="display: flex; align-items: center; justify-content: space-between;">
                                                <p>${price_shockers.displayName}</p>
                                                <p style="opacity: 0.7;margin-left: 30px;">BSE</p>
                                            </div>`;
                } else {
                    company_name.innerHTML = `<div style="display: flex; align-items: center; justify-content: space-between;">
                                                <p>${price_shockers.displayName}</p>
                                                <p style="opacity: 0.7;margin-left: 30px;">NSE</p>
                                            </div>`;
                }

                const price = document.createElement("td");
                price.innerText = '₹' + price_shockers.price;
                price.classList.add('text-end');

                const net_change = document.createElement("td");
                net_change.classList.add('text-end');
                if (price_shockers.netChange.slice(0, 1) === '-') {
                    net_change.style.color = '#A50E0E';
                    net_change.innerText = price_shockers.netChange.slice(0, 1) + "₹" + price_shockers.netChange.slice(1);
                    net_change.id = "net-change-low";
                } else {
                    net_change.style.color = '#137333';
                    net_change.innerText = '+₹' + price_shockers.netChange;
                    net_change.id = "net-change-high";
                }

                const percent_change = document.createElement("td");
                percent_change.classList.add("text-end");
                if (price_shockers.percentChange.slice(0, 1) === '-') {
                    percent_change.innerHTML = `<div>
                                                <span class="badge d-inline-flex align-items-center" style="background-color: #FCE8E6;">
                                                    <span class="material-symbols-outlined fs-5" style="color: #A50E0E;">
                                                        arrow_downward
                                                    </span>
                                                    <p class="fs-6 mb-0 pb-0" style="color: #A50E0E;">${price_shockers.percentChange.slice(1)}%</p>
                                                    <!-- green E6f4EA red FCE8E6 text green: 137333 red: a50e0e-->
                                                </span>
                                            </div>`;
                } else {
                    percent_change.innerHTML = `<div>
                                                <span class="badge d-inline-flex align-items-center" style="background-color: #E6F4EA;">
                                                    <span class="material-symbols-outlined fs-5" style="color: #137333;">
                                                        arrow_upward
                                                    </span>
                                                    <p class="fs-6 mb-0 pb-0" style="color: #137333;">${price_shockers.percentChange}%</p>
                                                    <!-- green E6f4EA red FCE8E6 text green: 137333 red: a50e0e-->
                                                </span>
                                            </div>`;
                }


                table_row.appendChild(company_name);
                table_row.appendChild(price);
                table_row.appendChild(net_change);
                table_row.appendChild(percent_change);

                tableBody.appendChild(table_row);
            });
            darkMode(); // If Dark mode is enabled, it will darken the color of net change column
        }

        function darkMode() {
            const darkMode = localStorage.getItem('darkMode');

            if (darkMode === 'light' || darkMode === 'auto') {
                const table = document.querySelectorAll('table');
                table.forEach(t => {
                    t.classList.remove('table-dark');
                });

                const list = document.getElementById("ul-list");
                if (list.hasAttribute("data-bs-theme")) {
                    list.removeAttribute("data-bs-theme");
                }

                const netChangeHigh = document.querySelectorAll("#net-change-high");
                const netChangeLow = document.querySelectorAll("#net-change-low");

                netChangeHigh.forEach(high => {
                    high.classList.remove("net-change-high");
                });

                netChangeLow.forEach(low => {
                    low.classList.remove("net-change-low");
                });
            } else {
                const table = document.querySelectorAll('table');
                table.forEach(t => {
                    t.classList.add('table-dark');
                });

                const list = document.getElementById("ul-list");
                list.setAttribute("data-bs-theme", "dark");

                const netChangeHigh = document.querySelectorAll("#net-change-high");
                const netChangeLow = document.querySelectorAll("#net-change-low");

                netChangeHigh.forEach(high => {
                    high.classList.add("net-change-high");
                });

                netChangeLow.forEach(low => {
                    low.classList.add("net-change-low");
                });
            }
        }

        const light = document.getElementById("light");
        const lightCheck = document.getElementById("light-check");
        const dark = document.getElementById("dark");
        const darkCheck = document.getElementById("dark-check");
        const auto = document.getElementById("auto");
        const autoCheck = document.getElementById("auto-check");

        const darkModeButton = document.getElementById("dark-mode-button");

        function enableLight() {
            light.firstElementChild.classList.add('active');
            lightCheck.classList.remove('d-none');
            dark.firstElementChild.classList.remove('active');
            darkCheck.classList.add('d-none');
            auto.firstElementChild.classList.remove('active');
            autoCheck.classList.add('d-none');

            if (darkModeButton.childElementCount !== 0) {
                darkModeButton.firstElementChild.remove();
            }

            darkModeButton.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16"
                                                fill="currentColor" class="bi bi-brightness-high-fill my-1"
                                                viewBox="0 0 16 16">
                                                <path
                                                    d="M12 8a4 4 0 1 1-8 0 4 4 0 0 1 8 0M8 0a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 0m0 13a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 13m8-5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2a.5.5 0 0 1 .5.5M3 8a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2A.5.5 0 0 1 3 8m10.657-5.657a.5.5 0 0 1 0 .707l-1.414 1.415a.5.5 0 1 1-.707-.708l1.414-1.414a.5.5 0 0 1 .707 0m-9.193 9.193a.5.5 0 0 1 0 .707L3.05 13.657a.5.5 0 0 1-.707-.707l1.414-1.414a.5.5 0 0 1 .707 0m9.193 2.121a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .707M4.464 4.465a.5.5 0 0 1-.707 0L2.343 3.05a.5.5 0 1 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .708">
                                                </path>
                                            </svg>`;
        }

        function enableDark() {
            light.firstElementChild.classList.remove('active');
            lightCheck.classList.add('d-none');
            dark.firstElementChild.classList.add('active');
            darkCheck.classList.remove('d-none');
            auto.firstElementChild.classList.remove('active');
            autoCheck.classList.add('d-none');

            if (darkModeButton.childElementCount !== 0) {
                darkModeButton.firstElementChild.remove();
            }

            darkModeButton.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16"
                                                fill="currentColor" class="bi bi-moon-stars-fill my-1"
                                                viewBox="0 0 16 16">
                                                <path
                                                    d="M6 .278a.77.77 0 0 1 .08.858 7.2 7.2 0 0 0-.878 3.46c0 4.021 3.278 7.277 7.318 7.277q.792-.001 1.533-.16a.79.79 0 0 1 .81.316.73.73 0 0 1-.031.893A8.35 8.35 0 0 1 8.344 16C3.734 16 0 12.286 0 7.71 0 4.266 2.114 1.312 5.124.06A.75.75 0 0 1 6 .278">
                                                </path>
                                                <path
                                                    d="M10.794 3.148a.217.217 0 0 1 .412 0l.387 1.162c.173.518.579.924 1.097 1.097l1.162.387a.217.217 0 0 1 0 .412l-1.162.387a1.73 1.73 0 0 0-1.097 1.097l-.387 1.162a.217.217 0 0 1-.412 0l-.387-1.162A1.73 1.73 0 0 0 9.31 6.593l-1.162-.387a.217.217 0 0 1 0-.412l1.162-.387a1.73 1.73 0 0 0 1.097-1.097zM13.863.099a.145.145 0 0 1 .274 0l.258.774c.115.346.386.617.732.732l.774.258a.145.145 0 0 1 0 .274l-.774.258a1.16 1.16 0 0 0-.732.732l-.258.774a.145.145 0 0 1-.274 0l-.258-.774a1.16 1.16 0 0 0-.732-.732l-.774-.258a.145.145 0 0 1 0-.274l.774-.258c.346-.115.617-.386.732-.732z">
                                                </path>
                                            </svg>`;
        }

        function enableAuto() {
            light.firstElementChild.classList.remove('active');
            lightCheck.classList.add('d-none');
            dark.firstElementChild.classList.remove('active');
            darkCheck.classList.add('d-none');
            auto.firstElementChild.classList.add('active');
            autoCheck.classList.remove('d-none');

            if (darkModeButton.childElementCount !== 0) {
                darkModeButton.firstElementChild.remove();
            }

            darkModeButton.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16"
                                                fill="currentColor" class="bi bi-circle-half my-1"
                                                viewBox="0 0 16 16">
                                                <path d="M8 15A7 7 0 1 0 8 1zm0 1A8 8 0 1 1 8 0a8 8 0 0 1 0 16"></path>
                                            </svg>`;
        }

        light.addEventListener("click", () => {
            enableLight();
            localStorage.setItem('darkMode', 'light');
            darkMode();
        });

        dark.addEventListener("click", () => {
            enableDark();
            localStorage.setItem('darkMode', 'dark');
            darkMode();
        });

        auto.addEventListener("click", () => {
            enableAuto();
            localStorage.setItem('darkMode', 'auto');
            darkMode();
        });

        const mode = localStorage.getItem('darkMode');
        if (mode === 'light') {
            enableLight();
        } else if (mode === 'dark') {
            enableDark();
        } else if (mode === 'auto') {
            enableAuto();
        } else {
            localStorage.setItem('darkMode', 'light');
            enableLight();
        }

        darkMode();
    </script>
</body>

</html>